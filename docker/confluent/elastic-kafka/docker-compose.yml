---
version: '3.8'
services:

  ###########################################################################
  # Elasticsearch Stack
  ###########################################################################
#  kibana:
#    image: docker.elastic.co/kibana/kibana:${ELASTIC_VERSION}
#    container_name: kibana
#    ports:
#      - 5601:5601
#    environment:
#      ELASTICSEARCH_URL: http://elasticsearch1:9200
#      ELASTICSEARCH_HOSTS: http://elasticsearch1:9200

  # One-time setup: sudo sysctl -w vm.max_map_count=262144
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELASTIC_VERSION}
    container_name: elasticsearch
    restart: unless-stopped
    environment:
      - node.name=elasticsearch
      - cluster.name=elasticsearch-docker-cluster
      - discovery.seed_hosts=elasticsearch2
      - cluster.initial_master_nodes=elasticsearch
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200

  elasticsearch2:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELASTIC_VERSION}
    container_name: elasticsearch2
    environment:
      - node.name=elasticsearch2
      - cluster.name=elasticsearch-docker-cluster
      - discovery.seed_hosts=elasticsearch
      - cluster.initial_master_nodes=elasticsearch,elasticsearch2
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticsearch-data2:/usr/share/elasticsearch/data
    ports:
      - 9201:9201

  ###########################################################################
  # Kafka Stack
  ###########################################################################
  zookeeper:
    image: confluentinc/cp-zookeeper:${CONFLUENT_VERSION}
    hostname: zookeeper
    container_name: zookeeper
    restart: unless-stopped
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka-broker:
    build:
      context: kafka-broker
    image: cp-kafka-with-monitoring
    hostname: kafka-broker
    container_name: kafka-broker
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
      - "9092:9092"
      - "9101:9101"
      - "9095:9095"
    volumes:
      - kafka-data:/var/lib/kafka/data
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_HEAP_OPTS: "-Xms256m -Xmx512m"
      KAFKA_JMX_PORT: 9101
      # Prometheus metrics exposed at http://localhost:9095/metrics
      KAFKA_OPTS: -javaagent:/opt/jmx-exporter/jmx-exporter-javaagent.jar=9095:/etc/jmx-exporter/jmx-exporter-kafka.yml

  kafka-schema-registry:
    image: confluentinc/cp-schema-registry:${CONFLUENT_VERSION}
    hostname: kafka-schema-registry
    container_name: kafka-schema-registry
    restart: unless-stopped
    depends_on:
      - zookeeper
      - kafka-broker
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: kafka-schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:2181'
      KAFKA_HEAP_OPTS: "-Xms256m -Xmx512m"

  kafka-connect:
    image: confluentinc/cp-kafka-connect:${CONFLUENT_VERSION}
    hostname: kafka-connect
    container_name: kafka-connect
    restart: unless-stopped
    depends_on:
      - zookeeper
      - kafka-broker
      - kafka-schema-registry
    ports:
      - "8083:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: 'kafka-broker:29092'
      CONNECT_REST_ADVERTISED_HOST_NAME: kafka-connect
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: compose-connect-group
      KAFKA_HEAP_OPTS: "-Xms256m -Xmx512m"
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://kafka-schema-registry:8081
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      CONNECT_PLUGIN_PATH: "/usr/share/java/kafka-connect-elasticsearch,/usr/share/java/kafka-connect-jdbc,/usr/share/java/schema-registry"
      CONNECT_LOG4J_LOGGERS: org.apache.zookeeper=ERROR,org.I0Itec.zkclient=ERROR,org.reflections=ERROR

#  kafka-ksqldb-server:
#    image: confluentinc/cp-ksqldb-server:${CONFLUENT_VERSION}
#    hostname: kafka-ksqldb-server
#    container_name: kafka-ksqldb-server
#    restart: unless-stopped
#    depends_on:
#      - kafka-broker
#      - kafka-connect
#    ports:
#      - "8088:8088"
#    environment:
#      KSQL_CONFIG_DIR: "/etc/ksql"
#      KSQL_BOOTSTRAP_SERVERS: "kafka-broker:29092"
#      KSQL_HOST_NAME: kafka-ksqldb-server
#      KSQL_LISTENERS: "http://0.0.0.0:8088"
#      KSQL_CACHE_MAX_BYTES_BUFFERING: 0
#      KSQL_KSQL_SCHEMA_REGISTRY_URL: "http://kafka-schema-registry:8081"
#      KSQL_KSQL_CONNECT_URL: "http://kafka-connect:8083"
#
#  kafka-ksqldb-cli:
#    image: confluentinc/cp-ksqldb-cli:${CONFLUENT_VERSION}
#    container_name: kafka-ksqldb-cli
#    restart: unless-stopped
#    depends_on:
#      - kafka-broker
#      - kafka-connect
#      - kafka-ksqldb-server
#    entrypoint: /bin/sh
#    tty: true

  kafka-rest-proxy:
    image: confluentinc/cp-kafka-rest:${CONFLUENT_VERSION}
    restart: unless-stopped
    depends_on:
      - zookeeper
      - kafka-broker
      - kafka-schema-registry
    ports:
      - 8082:8082
    hostname: kafka-rest-proxy
    container_name: kafka-rest-proxy
    environment:
      KAFKA_REST_HOST_NAME: kafka-rest-proxy
      KAFKA_REST_BOOTSTRAP_SERVERS: 'kafka-broker:29092'
      KAFKA_REST_LISTENERS: "http://0.0.0.0:8082"
      KAFKA_REST_SCHEMA_REGISTRY_URL: 'http://kafka-schema-registry:8081'
      KAFKA_HEAP_OPTS: "-Xms128m -Xmx256m"

volumes:
  elasticsearch-data:
    driver: local
  elasticsearch-data2:
    driver: local
  kafka-data:
    driver: local
